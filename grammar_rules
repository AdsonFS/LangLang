statement_list        : statement
                      | statement statement_list

statement             : variable_declaration SEMICOLON 
                      | func_declaration
                      | class_declaration
                      | while_statement
                      | for_statement
                      | if_statement
                      | output_stream SEMICOLON
                      | input_stream SEMICOLON  
                      | expression
                      | identifier
                      | block
                      | return


while_statement       : 'while' '(' expression ')' '{' statement_list '}'
for_statement         : 'for' '(' variable_declaration ';' expression ';' expression ')' '{' statement_list '}'
                      | 'for' '(' expression ';' expression ';' expression ')' '{' statement_list '}'

if_statement          : 'if' '(' expression ')' '{' statement_list '}'
                        ('else' '{' statement '}' 

block                 : '{' statement_list '}'
return                : 'return' expression ;

class_declaration     : class identifier : identifier '{' ( variable_declaration | func_declaration )* '}'
variable_declaration  : 'var' identifier '->' type := expression
                      | 'var' identifier '->' type;

func_declaration      : 'func' identifier '(' ')' -> type? '{' statement_list '}'

type                  : 'string' | 'number' | void | identifier | '(' ')' -> type?
output_stream         : >> output output_stream*
output                : expression 

input_stream          : << identifier inputStream*



expression            : assignment

assignment            : property_chain := assignment
                      | equality_expression (( == | != ) equality_expression)*


equality_expression   : logical_expression ((<|>) logical_expression)*
logical_expression    : clause ((<|>) clause)*
clause                : term ( PLUS|MINUS ) term
term                  : factor ((DIV|MULT|MOD) factor)*
factor                : (PLUS|MINUS)factor 
                      | NUMBER | STRING
                      | property_chain
                      | '(' expression ')'


property_chain        : (identifier_or_call) ( . property_chain )*
identifier_or_call    : identifier | call
call                  : identifier '(' ')'
identifier            : IDENTIFIER
